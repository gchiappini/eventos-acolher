:root {
	--accent-dark: #0c002b;
	--accent-light: dodgerblue;
}

.container {
	max-width: 960px;
	margin: 0 auto;
}

.title {
	margin: 60px 0;
	color: cornflowerblue;
	font-weight: normal;
	font-size: 34px;
	font-family: Monoton, sans-serif;
	text-align: center;
	text-transform: uppercase;
	text-shadow:	0 0 20px rgb(0, 0, 255, 1),
					0 0 50px rgb(0, 0, 255, 0.5),
					0 0 200px rgb(0, 0, 255, 0.5),
					0 0 100px rgb(0, 0, 255, 1),
					0 0 250px rgb(0, 0, 255, 1),
					0 0 300px rgb(0, 0, 255, 1);
	white-space: nowrap;
	cursor: default;
	animation: flicker 5s infinite alternate;
}

@keyframes flicker {
	44%, 46%, 98%, 100% {
		opacity: 1;
	}
	45%, 99% {
		opacity: 0.7;
	}
}

@media (width >= 400px) {
	.title {
		font-size: 38px;
	}
}

@media (width >= 600px) {
	.title {
		font-size: 54px;
	}
}

@media (width >= 800px) {
	.title {
		margin-bottom: 100px;
		font-size: 72px;
	}
}

@media (width >= 1024px) {
	.title {
		font-size: 84px;
	}
}


/* ---- Card ---- */
.card-section {
	display: flex;
	margin: 0 40px 20px 20px;
}

.card-date {
	display: flex;
	flex-direction: column;
	align-items: center;
	min-width: 75px;
	font-weight: bold;
	line-height: 1.3;
	text-transform: uppercase;
	pointer-events: none;
}

.card-day {
	font-size: 32px;
}

.card-month {
	font-size: 16px;
}

.card-main {
	display: grid;
	grid-template-columns: 3fr 1fr;
	grid-template-areas:
		"info side"
		"info side"
		"summ summ";
	width: 100%;
}

.card-block {
	padding: 20px;
	background-color: rgb(30, 30, 30, 0.6);
}

.card-block > *:last-child {
	margin-bottom: 0;
}

.card-info {
	grid-area: info;
	padding-bottom: 0;
	pointer-events: none;
}

.card-aside {
	grid-area: side;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.card-summary {
	grid-area: summ;
	display: none;
	padding-top: 0;
	padding-bottom: 0;
}

.card-summary > * {
	transform: translateY(-10px);
}

@media (width >= 600px) {
	.card-summary {
		display: block;
	}
}

@media (width >= 600px) {
	.card-main {
		flex-direction: row;
	}
	.card-info {
		padding-bottom: 20px;
	}
}

@media (width >= 1024px) {
	.card-section {
		margin: 0 0 20px 0;
	}
}


/* ---- Info ---- */
.card-title {
	margin: 0;
	font-weight: bold;
	font-size: 16px;
	text-align: center;
	text-wrap: balance;
	/*text-transform: capitalize;*/
}

.card-tags {
	display: flex;
	flex-flow: row wrap;
}

.tag {
	width: fit-content;
	margin: 0 5px 10px 0;
	padding: 2px 10px;
	background: linear-gradient(var(--theme), color-mix(in srgb, var(--theme), black 70%));
	border-radius: 999px;
	font-size: 12px;
	pointer-events: none;
}

.codando {
	--theme: indianred;
}

.comunicando {
	--theme: mediumorchid;
}

.cuidando {
	--theme: khaki;
}

.desembolando {
	--theme: darkorange;
}

.endireitando {
	--theme: black;
}

.engenheirando {
	--theme: midnightblue;
}

.ensinando {
	--theme: steelblue;
}

.negociando {
	--theme: navy;
}

.projetando {
	--theme: magenta;
}

.veterinando {
	--theme: seagreen;
}

@media (width >= 400px) {
	.card-title {
		font-size: 20px;
	}
}

@media (width >= 600px) {
	.card-title {
		text-align: left;
		text-wrap: wrap;
	}

}


/* ---- Aside ---- */
.portrait {
	width: 120px;
	height: 120px;
	margin-bottom: 20px;
	background: #ccc center 20%/120px no-repeat;
	border-radius: 50%;
	border: 2px solid var(--accent-light);
}

.card-button {
	padding: 20px 30px;
	border: none;
	border-radius: 22px;
	color: black;
	font-weight: bold;
	text-decoration: none;
	line-height: 4px;
	transition: transform 0.2s;
}

.card-button:hover {
	color: white;
}

.card-button:active {
	outline: 0;
	transform: scale(0.95);
}

.button-event {
	background-color: var(--accent-light);
}

.button-recording {
	background-color: #aaa;
}

.button-recording:hover {
	background-color: var(--accent-light);
}

@media (width >= 600px) {
	.card-button {
		min-width: unset;
	}
}


/* ---- Summary ---- */
summary {
	display: flex;
	padding-bottom: 10px;
	font-weight: bold;
	cursor: pointer;
}

summary::before {
	content: "\2B9E";
	display: inline-block;
	margin-right: 10px;
	transition: transform 0.2s;
}

details {
	display: none;
}

details[open] {
	display: unset;
}

details[open] summary::before {
	transform: rotate(90deg);
}

details[open] summary {
	border-bottom: 1px solid #aaa;
}

details[open] summary ~ * {
	animation: fade-in 1s ease-in;
}

details[open] div {
	padding: 5px 10px;
	color: #aaa;
	text-align: justify;
	text-justify: inter-word;
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: var(--opacity);	/* Needs a var so the text doesn't flash if details[open] + .finished-event */
	}
}


/* ---- Finished event ---- */
.finished-event :is(.card-date, .card-info, .card-summary) * {
	--opacity: 0.5;
	opacity: var(--opacity);
}

.finished-event .portrait {
	filter: grayscale(100%);
}

.finished-event button a {
	color: #555;
}


/* ---- Current event ---- */
.current-event {
	overflow: hidden;
	transform: translate(0%);
}

.current-event > span {
	position: absolute;
}

.current-event .animRight {
	top: 0;
	left: 0;
	width: 100%;
	height: 2px;
	background: linear-gradient(to right, var(--accent-dark), var(--accent-light));
	animation: animRight 2s linear infinite;
}

@keyframes animRight {
	from {
		transform: translateX(-100%);
	}
	to {
		transform: translateX(100%);
	}
}

.current-event .animDown {
	top: 0;
	right: 0;
	width: 2px;
	height: 100%;
	background: linear-gradient(to bottom, var(--accent-dark), var(--accent-light));
	animation: animDown 2s linear 1s infinite;
}

@keyframes animDown {
	from {
		transform: translateY(-100%);
	}
	to {
		transform: translateY(100%);
	}
}

.current-event .animLeft {
	bottom: 0;
	right: 0;
	width: 100%;
	height: 2px;
	background: linear-gradient(to left, var(--accent-dark), var(--accent-light));
	animation: animLeft 2s linear infinite;
}

@keyframes animLeft {
	from {
		transform: translateX(100%);
	}
	to {
		transform: translateX(-100%);
	}
}

.current-event .animUp {
	bottom: 0;
	left: 0;
	width: 2px;
	height: 100%;
	background: linear-gradient(to top, var(--accent-dark), var(--accent-light));
	animation: animUp 2s linear 1s infinite;
}

@keyframes animUp {
	from {
		transform: translateY(100%);
	}
	to {
		transform: translateY(-100%);
	}
}
